// ============================================
// MAIN.JS - –ì–æ–ª–æ–≤–Ω–∏–π –ø—Ä–æ—Ü–µ—Å Electron
// ============================================
// –í–µ—Ä—Å—ñ—è: v0.6.0 - Security + Excel - BUGFIX
// –ó–º—ñ–Ω–∏: –í–ò–ü–†–ê–í–õ–ï–ù–û —à–ª—è—Ö –¥–æ issues!
// ============================================

const { app, BrowserWindow, ipcMain, shell } = require('electron');
const path = require('path');
const fs = require('fs').promises;
const { WebCrawler } = require('./crawler');
const HTMLAnalyzer = require('./analyzer');
const ExcelExporter = require('./excel-exporter');

// ============================================
// –í–ï–†–°–Ü–Ø - –Ñ–¥–∏–Ω–µ –¥–∂–µ—Ä–µ–ª–æ –ø—Ä–∞–≤–¥–∏
// ============================================
const { version } = require('../../package.json');

// ============================================
// –ó–ú–Ü–ù–ù–Ü
// ============================================

let mainWindow = null;
let activeCrawler = null;  // –ü–æ—Ç–æ—á–Ω–∏–π –∞–∫—Ç–∏–≤–Ω–∏–π crawler

// ============================================
// –°–¢–í–û–†–ï–ù–ù–Ø –ì–û–õ–û–í–ù–û–ì–û –í–Ü–ö–ù–ê
// ============================================

function createMainWindow() {
  mainWindow = new BrowserWindow({
    width: 1000,
    height: 700,
    minWidth: 900,
    minHeight: 600,
    icon: path.join(__dirname, '../../public/icon.png'),
    webPreferences: {
      // ‚úÖ SECURITY FIX v0.6.0
      nodeIntegration: false,        // ‚úÖ –í–∏–º–∫–Ω–µ–Ω–æ
      contextIsolation: true,        // ‚úÖ –£–≤—ñ–º–∫–Ω–µ–Ω–æ
      enableRemoteModule: false,     // ‚úÖ –í–∏–º–∫–Ω–µ–Ω–æ
      preload: path.join(__dirname, 'preload.js')  // ‚úÖ Preload script
    },
    show: false,
    backgroundColor: '#ffffff'
  });

  mainWindow.loadFile(path.join(__dirname, '../renderer/index.html'));

  mainWindow.once('ready-to-show', () => {
    mainWindow.show();
  });

  // DevTools —É —Ä–µ–∂–∏–º—ñ —Ä–æ–∑—Ä–æ–±–∫–∏
  if (process.argv.includes('--dev')) {
    mainWindow.webContents.openDevTools();
  }

  mainWindow.on('closed', () => {
    mainWindow = null;
    // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ crawler —è–∫—â–æ –≤—ñ–∫–Ω–æ –∑–∞–∫—Ä–∏–ª–∏
    if (activeCrawler) {
      activeCrawler.close();
      activeCrawler = null;
    }
  });
}

// ============================================
// LIFECYCLE –ü–û–î–Ü–á
// ============================================

app.on('ready', () => {
  console.log(`üöÄ SEO Audit Tool v${version} –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...`);
  console.log(`üîê Security: contextIsolation=true, nodeIntegration=false`);
  createMainWindow();
});

app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit();
  }
});

app.on('activate', () => {
  if (mainWindow === null) {
    createMainWindow();
  }
});

// ============================================
// IPC HANDLERS
// ============================================

/**
 * –¢–µ—Å—Ç–æ–≤–∏–π handler
 */
ipcMain.handle('test-connection', async () => {
  return { 
    success: true, 
    message: 'Electron –ø—Ä–∞—Ü—é—î!',
    version: version
  };
});

/**
 * –í–∞–ª—ñ–¥–∞—Ü—ñ—è URL
 */
ipcMain.handle('validate-url', async (event, url) => {
  try {
    const urlObj = new URL(url);
    return {
      valid: true,
      protocol: urlObj.protocol,
      hostname: urlObj.hostname
    };
  } catch (error) {
    return {
      valid: false,
      error: '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç URL. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: https://example.com'
    };
  }
});

/**
 * Handler –¥–ª—è –ø–æ—á–∞—Ç–∫—É –∞—É–¥–∏—Ç—É
 */
ipcMain.handle('start-audit', async (event, url, options = {}) => {
  console.log('üîç –ü–æ—á–∞—Ç–æ–∫ –∞—É–¥–∏—Ç—É:', url);
  console.log('‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:', options);

  try {
    // ========================================
    // –ö–†–û–ö 1: –ö–†–ê–£–õ–Ü–ù–ì –°–ê–ô–¢–£
    // ========================================
    console.log('üï∑Ô∏è –ö—Ä–æ–∫ 1/3: –ö—Ä–∞—É–ª—ñ–Ω–≥ —Å–∞–π—Ç—É...');

    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –ø—Ä–æ–≥—Ä–µ—Å
    if (mainWindow && !mainWindow.isDestroyed()) {
      mainWindow.webContents.send('audit-progress', {
        step: 'starting',
        current: 0,
        total: options.depth || 50,
        percent: 0,
        currentUrl: '–ó–∞–ø—É—Å–∫ –∫—Ä–∞—É–ª–µ—Ä–∞...'
      });
    }

    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π crawler
    activeCrawler = new WebCrawler();

    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å –¥–æ UI
    activeCrawler.on('progress', (data) => {
      if (mainWindow && !mainWindow.isDestroyed()) {
        mainWindow.webContents.send('audit-progress', {
          step: 'scanning',
          current: data.visited,
          total: data.total,
          percent: Math.round((data.visited / data.total) * 100),
          currentUrl: data.currentUrl
        });
      }
    });

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ –∫—Ä–∞—É–ª—ñ–Ω–≥
    const crawlResult = await activeCrawler.crawl(url, options.depth || 50);

    if (crawlResult.stopped) {
      console.log('‚ö†Ô∏è –ö—Ä–∞—É–ª—ñ–Ω–≥ –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º');
      return {
        success: false,
        stopped: true,
        message: '–ê—É–¥–∏—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º'
      };
    }

    console.log(`‚úÖ –ö—Ä–∞—É–ª—ñ–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: ${crawlResult.results.length} —Å—Ç–æ—Ä—ñ–Ω–æ–∫`);

    // ========================================
    // –ö–†–û–ö 2: –ê–ù–ê–õ–Ü–ó –î–ê–ù–ò–•
    // ========================================
    console.log('üìä –ö—Ä–æ–∫ 2/3: –ê–Ω–∞–ª—ñ–∑ –¥–∞–Ω–∏—Ö...');

    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å –∞–Ω–∞–ª—ñ–∑—É
    if (mainWindow && !mainWindow.isDestroyed()) {
      mainWindow.webContents.send('audit-progress', {
        step: 'analyzing',
        current: 100,
        total: 100,
        percent: 100,
        currentUrl: '–í–∏–∫–æ–Ω–∞–Ω–Ω—è SEO –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫...'
      });
    }

    // –°—Ç–≤–æ—Ä—é—î–º–æ analyzer
    const analyzer = new HTMLAnalyzer({
      baseUrl: crawlResult.stats.baseUrl,
      pages: crawlResult.results
    });

    // –í–∏–∫–æ–Ω—É—î–º–æ –∞–Ω–∞–ª—ñ–∑
    const technicalChecks = options.checks?.technical !== false;
    const seoChecks = options.checks?.seo !== false;

    const analysisResult = await analyzer.analyze(technicalChecks, seoChecks);
    console.log(`‚úÖ –ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ë–∞–ª: ${analysisResult.summary.score}/100`);

    // ========================================
    // –ö–†–û–ö 3: –ì–ï–ù–ï–†–ê–¶–Ü–Ø –ó–í–Ü–¢–£
    // ========================================
    console.log('üìÑ –ö—Ä–æ–∫ 3/3: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–≤—ñ—Ç—É...');

    const report = await analyzer.generateTextReport();
    console.log(`‚úÖ –ó–≤—ñ—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ: ${report.filename}`);

    // ========================================
    // –†–ï–ó–£–õ–¨–¢–ê–¢
    // ========================================

    // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ crawler
    await activeCrawler.close();
    activeCrawler = null;

    // ‚úÖ‚úÖ‚úÖ –ö–†–ò–¢–ò–ß–ù–û –í–ê–ñ–õ–ò–í–û - –ü–†–ê–í–ò–õ–¨–ù–ê –°–¢–†–£–ö–¢–£–†–ê –î–ê–ù–ò–•:
    return {
      success: true,
      message: `–ê—É–¥–∏—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ë–∞–ª: ${analysisResult.summary.score}/100`,
      data: {
        baseUrl: crawlResult.stats.baseUrl,
        score: analysisResult.summary.score,
        totalPages: crawlResult.stats.visitedPages,
        
        // –ú–µ—Ç—Ä–∏–∫–∏ –∑ summary
        passedChecks: analysisResult.summary.passedChecks,
        failedChecks: analysisResult.summary.failedChecks,
        criticalIssues: analysisResult.summary.criticalIssues,
        highIssues: analysisResult.summary.highIssues,
        mediumIssues: analysisResult.summary.mediumIssues,
        lowIssues: analysisResult.summary.lowIssues,
        
        // ‚úÖ –í–ò–ü–†–ê–í–õ–ï–ù–û: –î–∞–Ω—ñ –¥–ª—è UI —Ç–∞ Excel
        checks: analysisResult.checks,        // ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ
        issues: analysisResult.issues,        // ‚úÖ‚úÖ‚úÖ –ù–ï analysisResult.report.issues!
        pages: crawlResult.results,           // ‚úÖ –î–ª—è Excel –µ–∫—Å–ø–æ—Ä—Ç—É
        reportFile: report.filename
      }
    };

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∞—É–¥–∏—Ç—É:', error);

    // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ crawler —è–∫—â–æ –ø–æ–º–∏–ª–∫–∞
    if (activeCrawler) {
      await activeCrawler.close();
      activeCrawler = null;
    }

    return {
      success: false,
      error: error.message
    };
  }
});

/**
 * Handler –¥–ª—è –∑—É–ø–∏–Ω–∫–∏ –∞—É–¥–∏—Ç—É
 */
ipcMain.handle('stop-audit', async () => {
  console.log('üõë –ó—É–ø–∏–Ω–∫–∞ –∞—É–¥–∏—Ç—É...');

  try {
    if (activeCrawler) {
      activeCrawler.stop();
      await activeCrawler.close();
      activeCrawler = null;
      console.log('‚úÖ –ö—Ä–∞—É–ª–µ—Ä –∑—É–ø–∏–Ω–µ–Ω–æ');
      return { success: true, message: '–ê—É–¥–∏—Ç –∑—É–ø–∏–Ω–µ–Ω–æ' };
    }
    return { success: false, message: '–ê—É–¥–∏—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ' };
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑—É–ø–∏–Ω–∫–∏:', error);
    return { success: false, error: error.message };
  }
});

/**
 * Handler –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∑–≤—ñ—Ç—É
 */
ipcMain.handle('open-report', async (event, filename) => {
  try {
    const reportsDir = path.join(__dirname, '../../reports');
    const fullPath = path.join(reportsDir, filename);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î —Ñ–∞–π–ª
    try {
      await fs.access(fullPath);
    } catch {
      throw new Error('–§–∞–π–ª –∑–≤—ñ—Ç—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
    }

    console.log('üìÇ –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –∑–≤—ñ—Ç—É:', filename);
    console.log('üìÇ –ü–æ–≤–Ω–∏–π —à–ª—è—Ö:', fullPath);

    await shell.openPath(fullPath);
    return { success: true };
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∑–≤—ñ—Ç—É:', error);
    return {
      success: false,
      error: error.message
    };
  }
});

/**
 * Handler –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø–∞–ø–∫–∏ –∑—ñ –∑–≤—ñ—Ç–∞–º–∏
 */
ipcMain.handle('open-reports-folder', async () => {
  try {
    const reportsDir = path.join(__dirname, '../../reports');
    await shell.openPath(reportsDir);
    return { success: true };
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø–∞–ø–∫–∏:', error);
    return {
      success: false,
      error: error.message
    };
  }
});

/**
 * ‚úÖ –ù–û–í–ò–ô: Handler –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É –≤ Excel
 */
ipcMain.handle('export-to-excel', async (event, auditData, filename) => {
  console.log('üìä –ï–∫—Å–ø–æ—Ä—Ç –≤ Excel...');
  console.log('üìä –î–∞–Ω—ñ –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É:', {
    baseUrl: auditData.baseUrl,
    score: auditData.score,
    totalPages: auditData.totalPages,
    issues: auditData.issues?.length || 0,
    pages: auditData.pages?.length || 0
  });
  
  try {
    const exporter = new ExcelExporter();
    const result = await exporter.generateReport(
      auditData,
      auditData.baseUrl,
      filename
    );

    console.log(`‚úÖ Excel —Ñ–∞–π–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ: ${result.filename}`);

    return {
      success: true,
      filename: result.filename,
      filepath: result.filepath
    };

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É –≤ Excel:', error);
    console.error('Stack:', error.stack);
    return {
      success: false,
      error: error.message
    };
  }
});

// ============================================
// –ì–õ–û–ë–ê–õ–¨–ù–ê –û–ë–†–û–ë–ö–ê –ü–û–ú–ò–õ–û–ö
// ============================================

process.on('uncaughtException', (error) => {
  console.error('üí• Uncaught Exception:', error);
});

process.on('unhandledRejection', (error) => {
  console.error('üí• Unhandled Rejection:', error);
});

console.log(`‚úÖ Main process –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏ (v${version})`);
console.log(`üîê Security enabled: contextIsolation + preload.js`);